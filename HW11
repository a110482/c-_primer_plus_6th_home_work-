// ----------Q6-------------
// 判斷字元有沒有在字串裡
#include <stdio.h>
#include "string.h"

int is_within(char target, char *array);
int main() {
    char ch[30] = "qazwsxedcrfvtgbyhn";
    char tar = 'k';
    printf("%d\n", is_within(tar, ch));

    return 0;
}

int is_within(char target, char *array){
    size_t len = strlen(array);
    for(size_t i=0; i<len;i++){
        if (target == array[i]){
            return 1;
        }
    }
    return 0;
}


// ----------Q7-------------
// 實作自己的strncpy
#include <stdio.h>
#include "string.h"

char* my_str_cpy(char *target,const char *source, int len);
int main() {
    char a[10] = "ssssdddd";
    char b[10] = "a";
    my_str_cpy(b, a, 5);
    printf("%s\n", b);
    return 0;
}

char* my_str_cpy(char *target,const char *source, int len){
    for (int i=0; i<len;i++){
        target[i] = source[i];
    }
    return target;
}


// --------Q8--------
// 如果字串二包含在字一串內 就傳回指標位置 否則傳回空指標
#include <stdio.h>
#include <string.h>

char* string_in(char*, char*);

int main(int argc, const char * argv[]) {
    char c[30] = "abcdeefghijklmnopqrstuv";
    char cc[10] = "gh";
    
    char *p;
    p = string_in(c, cc);
    
    printf("%s\n", p);
    return 0;
}

char* string_in(char *str_1, char *str_2){
    unsigned long len;
    for(len=0; len<strlen(str_1); len++){
        if(str_1[len] == str_2[0] && strncmp(str_1+len, str_2, strlen(str_2)) == 0){
            return str_1+len;
        }
    }
    return NULL;
}
